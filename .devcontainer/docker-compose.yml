version: '3.8'

x-defaults:
  build: &flink-build
    context: ./flink
    dockerfile: ./flink.Dockerfile
  environment: &flink-environment
    - AWS_ACCESS_KEY_ID=minioadmin
    - AWS_SECRET_ACCESS_KEY=minioadmin
    - |
      FLINK_PROPERTIES=
      jobmanager.rpc.address: jobmanager
      sql-gateway.endpoint.rest.address: 0.0.0.0
      sql-gateway.session.idle-timeout: 1
      sql-gateway.worker.keepalive-time: 1
      rest.address: jobmanager
      taskmanager.numberOfTaskSlots: 2
      taskmanager.memory.process.size: 2g
      jobmanager.memory.process.size: 1g
      execution.checkpointing.interval: 30s
      execution.checkpointing.mode: EXACTLY_ONCE
      state.backend: filesystem
      state.checkpoints.dir: s3a://flink-checkpoints/checkpoint
      state.checkpoints.num-retained: 10
      state.backend.incremental: true
      fs.s3a.access-key: minioadmin
      fs.s3a.secret-key: minioadmin
      fs.s3a.endpoint: minio:9000
      fs.s3a.path.style.access: true
      fs.s3a.connection.ssl.enabled: false

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/workspace:cached
    working_dir: /workspace
    command: /bin/bash -c "while sleep 1000; do :; done"
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    depends_on:
      minio:
        condition: service_healthy
      jobmanager:
        condition: service_started
      kafka:
        condition: service_started

  jobmanager:
    build: *flink-build
    ports:
      - "8081:8081"
    command: jobmanager
    restart: always
    environment:
      *flink-environment

  taskmanager:
    build: *flink-build
    depends_on:
      - jobmanager
    command: taskmanager
    restart: always
    deploy:
      replicas: 2
    environment:
      *flink-environment

  sql-gateway:
    build: *flink-build
    ports:
      - "8083:8083"
    command: bin/sql-gateway.sh start-foreground
    restart: always
    depends_on:
      - jobmanager
    environment:
      *flink-environment

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.2.2
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  minio:
    image: bitnami/minio:2024.6.22
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: minio server /bitnami/minio/data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/bitnami/minio/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 20s
      retries: 30

  minio-setup:
    image: bitnami/minio-client:2024.1.18
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./minio/setup-minio.sh:/opt/bitnami/minio-client/setup-minio.sh
    entrypoint: /bin/bash /opt/bitnami/minio-client/setup-minio.sh

volumes:
  minio-data:
